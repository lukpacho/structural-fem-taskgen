name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # 1) checkout the code (pulls repo into the runner)
      - uses: actions/checkout@v4

      # 2) install Python 3.11
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # 3) Install system libraries gmsh needs
      - run: sudo apt-get update -y && sudo apt-get install -y libglu1-mesa

      # 4) install project deps + test runner
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest ruff black mypy

      # 5) Ruff linter (fail on warnings)
      - name: Ruff lint
        run: ruff check --config pyproject.toml .

      # 6) Black formatting (fail if auto-format would change files)
      - name: Black check
        run: black --check --config pyproject.toml .

      # 7) Static type checking
      - name: Mypy type-check
        run: mypy --config-file pyproject.toml src/ tests/

      # 8) run unit tests (located in ./tests)
      - run: pytest -q

  image:
      if: "${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}"
      needs: test
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - uses: actions/checkout@v4

        - uses: docker/setup-qemu-action@v3   # multi-arch emulation
        - uses: docker/setup-buildx-action@v3

        # ---------- optional: cache layers between builds ----------
        - uses: actions/cache@v4
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: ${{ runner.os }}-buildx-

        - uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            platforms: linux/amd64,linux/arm64
            tags: |
              ghcr.io/${{ github.repository }}:latest
              ghcr.io/${{ github.repository }}:${{ github.sha }}
            cache-from: type=local,src=/tmp/.buildx-cache
            cache-to: type=local,dest=/tmp/.buildx-cache,mode=max